#
# Makefile.mak.cfg - Configuration information (Win32)
#

# Comment out the following line to build non-debug
DEBUG = 1

# Comment out the following line to build the PtPTL as a static library
PTPTL_DLL=1

# Set type to "dll" when building a DLL
!IFDEF DLL_FLAG
!IFDEF $(DLL_FLAG)
TYPE = dll
!ENDIF
!ENDIF

# Directory to store executables for "make install"
INSTDIR = $(TOPDIR)\bin

# PtPTL build flags
PTPTL_INC = -I$(TOPDIR)\ptp\include
PTPTL_LIB = $(TOPDIR)\ptp\ptp.lib

# Cryptography library build flags
CRYPTO_INC = -I$(TOPDIR)\openssl\inc32
CRYPTO_LIB = $(TOPDIR)\openssl\out32\libeay32.lib

# Default Win32 libraries
WIN32_LIBS = advapi32.lib \
             comctl32.lib \
             comdlg32.lib \
             gdi32.lib \
             kernel32.lib \
             odbc32.lib \
             odbccp32.lib \
             ole32.lib \
             oleaut32.lib \
             shell32.lib \
             user32.lib \
             uuid.lib \
             winspool.lib \
             ws2_32.lib

#
# Compiler and flags
#
CC = cl.exe
CFLAGS = -nologo -W3 -GX $(PTPTL_INC) $(CRYPTO_INC)
CFLAGS = $(CFLAGS) -DWIN32 -D_WINDOWS -D_AFXDLL -D_MBCS
!IFDEF DEBUG
CFLAGS = $(CFLAGS) -MDd -G6 -Od -D_DEBUG -GZ -Zi
!ELSE
CFLAGS = $(CFLAGS) -MD -G6 -O2 -Ob2 -DNDEBUG
!ENDIF
!IF "$(TYPE)" == "dll"
CFLAGS = $(CFLAGS) -DPTPTL_DLL
!ENDIF

#
# Resource builder and flags
#
RC = rc.exe
RCFLAGS = -l0x409 -d_AFXDLL
!IFDEF DEBUG
RCFLAGS = $(RCFLAGS) -d_DEBUG
!ELSE
RCFLAGS = $(RCFLAGS) -dNDEBUG
!ENDIF

#
# Linker and flags
#
LD = link.exe
LDFLAGS = $(PTPTL_LIB) $(WIN32_LIBS)
LDFLAGS = $(LDFLAGS) -machine:I386 -nologo -incremental
!IF "$(TYPE)" == "windows"
LDFLAGS = $(LDFLAGS) -subsystem:windows
!ELSE
LDFLAGS = $(LDFLAGS) -subsystem:console
!ENDIF
!IFDEF DEBUG
LDFLAGS = $(LDFLAGS) -debug
!ENDIF

#
# Library builder and flags
#
!IF "$(TYPE)" == "dll"
AR = $(LD)
ARFLAGS = -dll -nologo -opt:ref -machine:I386 $(WIN32_LIBS)
!ELSE
AR = lib.exe
ARFLAGS =
!ENDIF
!IFDEF DEBUG
ARFLAGS = $(ARFLAGS) -debug
!ENDIF

#
# Other utilities
#
RM = erase
MKDIR = md
CP = copy /Y
CLEAN = $(RM) $(TARGET)^
	$(RM) *.obj^
	$(RM) *.lib^
	$(RM) *.exp^
	$(RM) *.res^
	$(RM) *.idb^
	$(RM) *.pdb^
	$(RM) *.dep^
	$(RM) *.ncb^
	$(RM) *.opt^
	$(RM) *.pch^
	$(RM) *.ilk

#
# Rules
#
.cpp.obj:
	$(CC) $(CFLAGS) -Fo$*.obj -c $<

.rc.res:
	$(RC) $(RCFLAGS) $<
